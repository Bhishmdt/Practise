def,def main()
def,def create_server_connection(host_name, user_name, user_password, db_name)
def,def read_query(connection, query)
def,def execute_query(connection, query)
def,def create_retailer(retail_id, retail_name)
def,def add_transaction(client_id, retail_id, item_id, cost_price, BorS, consignment_no, transaction_date)
def,def run_consumer()
def,def create_server_connection(host_name, user_name, user_password, db_name)
def,def read_query(connection, query)
def,def execute_query(connection, query)
def,def create_retailer(retail_id, retail_name)
def,def add_transaction(client_id, retail_id, item_id, cost_price, BorS, consignment_no, transaction_date)
def,def random_date(start = datetime.strptime('2018/1/1', '%Y/%m/%d'), end = datetime.strptime('2020/12/31', '%Y/%m/%d'))
def,def delivery_report(err, msg)
def,def run_producer()
def,def index(request)
def,def inventory_show(request)
def,def inventory_form(request)
def,def add_inventory(request)
def,    def __str__(self)
def,    def __str__(self)
def,    def __str__(self)
def,    def __str__(self)
def,def create_product(sender, **kwargs)
success,            messages.success(request, 'Record Saved successfully')
success,            messages.success(request, f'{product_id}
success,          <input type="submit" name="submit" value="Submit" class="btn btn-success">
success,    formGroup.classList.remove('success');
success,    formGroup.classList.add('success');
success,          <input type="submit" name="submit" value="Submit" class="btn btn-success">
success,          <input type="submit" value="Submit" class="btn btn-success">
