"""
The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.

Given an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order.

Each solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively.
"""

def solveNQueens(n):
    res = []
    dfs([-1]*n, 0, [], res)
    return res

def dfs(nums, index, path, res):
    if index == len(nums):
        res.append(path)
        return
    for i in range(len(nums)):
        nums[index] = i
        if valid(nums, index):
            tmp = "."*len(nums)
            #print(path+[tmp[:i]+"Q"+tmp[i+1:]])
            dfs(nums, index+1, path+[tmp[:i]+"Q"+tmp[i+1:]], res)

def valid(nums, n):
    for i in range(n):
        if abs(nums[i]-nums[n]) == n - i or nums[i] == nums[n]:
            return False
    return True

if __name__ == '__main__':
    print(solveNQueens(4))

